<?php

namespace Core\Base\Traits\ServiceProvider;

use Illuminate\Support\Str;

trait Module
{
    /**
     * register the service provider for the module
     */
    private function registerModules()
    {
        // Register the core modules
        $root_namespace = 'Core';
        $excluded_directory = 'Base';
        $root_path = config('laragine.root_dir');
        
        foreach (glob($root_path.'/*/ModuleServiceProvider.php') as $file) {
            if (!preg_match("/core\/{$excluded_directory}/i", $file)) {
                $this->registerModuleServiceProvider($file, $root_namespace);
            }
        }

        // Register the plugins modules
        $plugins_namespace = 'Plugins';
        $plugins_path = config('laragine.plugins_dir');

        foreach (glob($plugins_path.'/*/ModuleServiceProvider.php') as $file) {
            $this->registerModuleServiceProvider($file, $plugins_namespace);
        }
    }

    /**
     * handle registering the module service provider
     */
    private function registerModuleServiceProvider($file, $root_namespace) 
    {
        $root_namespace_lower_case = Str::lower($root_namespace);
        $namespace = str_replace('/', '\\', str_replace('.php', '', $file));
        $namespace = explode("{$root_namespace_lower_case}\\", $namespace)[1];
        $this->app->register($root_namespace . '\\' . $namespace);
    }
}
